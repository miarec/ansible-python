---
- include_vars: "{{ item }}"
  with_first_found:
    - "../vars/{{ ansible_distribution }}-{{ ansible_distribution_major_version}}.yml"
    - "../vars/{{ ansible_distribution }}.yml"
    - "../vars/{{ ansible_os_family }}.yml"

# Install Python3 from package when user doesnt specify specific version
- include: install-package.yml
  when: python_version is not defined

- name: Install specified version of Python3 from Source
  block:
    - set_fact:
        # Translate full python_version (3.4.5) to the MAJOR.MINOR value, like "3.4"
        python_version_base: "{{ python_version|regex_replace('(\\d+\\.\\d+)\\..*$', '\\1') }}"
      when: ansible_version.major >= 2

    - set_fact:
        # Translate full python_version (3.4.5) to the MAJOR.MINOR value, like "3.4"
        # Prior to ansible 2.0, you needed to escape backreferences (e.g. \\1) with 4 backslashes (\\\\)
        python_version_base: "{{ python_version|regex_replace('(\\d+\\.\\d+)\\..*$', '\\\\1') }}"
      when: ansible_version.major < 2

    - set_fact:
        python_exec: "python{{ python_version_base }}"

    - name: check if python version {{ python_version }} installed
      command: "which {{ python_install_dir }}/bin/{{ python_exec }}"
      register: python_exists
      failed_when: false
      ignore_errors: true
      changed_when: false

    - include: dependencies.yml
      when: python_force_install|bool or python_exists.rc != 0
      become: true

    - include: install-source.yml
      when: python_force_install|bool or python_exists.rc != 0

  when: python_version is defined


# - set_fact:
#     # Translate full python_version (3.4.5) to the MAJOR.MINOR value, like "3.4"
#     python_version_base: "{{ python_version|regex_replace('(\\d+\\.\\d+)\\..*$', '\\1') }}"
#   when: ansible_version.major >= 2

# - set_fact:
#     # Translate full python_version (3.4.5) to the MAJOR.MINOR value, like "3.4"
#     # Prior to ansible 2.0, you needed to escape backreferences (e.g. \\1) with 4 backslashes (\\\\)
#     python_version_base: "{{ python_version|regex_replace('(\\d+\\.\\d+)\\..*$', '\\\\1') }}"
#   when: ansible_version.major < 2

# - set_fact:
#     python_exec: "python{{ python_version_base }}"

# - name: check if python version {{ python_version }} installed
#   command: "which {{ python_install_dir }}/bin/{{ python_exec }}"
#   register: python_exists
#   failed_when: false
#   ignore_errors: true
#   changed_when: false


# - include: dependencies.yml
#   when: python_force_install|bool or python_exists.rc != 0
#   become: true

# - include: install-source.yml
#   when: python_force_install|bool or python_exists.rc != 0
